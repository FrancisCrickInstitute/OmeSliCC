# input parameters - use either Source or Omero
input:
  # Use either 'source' or 'omero' - mutually exclusive
  # source - input folder or URL (pattern or list supported) - mutually exclusive with omero
  #source: /source/
  # omero - Omero source details - mutually exclusive with source
  omero:
    # host - Omero server address
    host: ssl://omero.server
    # include - Omero project id(s) / dataset id(s) / image id(s) to include
    include:
      dummy: dummy
      project: [0, 1]
      dataset: [0, 1]
      image: [0, 1]
      regex: []
    # exclude - Omero project id(s) / dataset id(s) / image id(s) to exclude
    exclude:
      dummy: dummy
      project: [0, 1]
      dataset: [0, 1]
      image: [0, 1]
      regex: []
  # pixel_size - source magnification (if not in metadata)
  #pixel_size: 1

# output parameters
output:
  # pixel_size - optional output magnification
  #pixel_size: 1
  # folder - output folder
  folder: output/images
  # format - output image format
  format: ome.tiff
  # overwrite - overwrite existing files in output folder
  overwrite: True
  # break_on_error - stop processing when error occurs
  break_on_error: False
  # combine_rgb - combine rgb channels
  combine_rgb: True
  # tile_size - size for optional tiling
  tile_size: [256, 256]
  # compression - optional compression format/level
  compression: ['JPEGXR_NDPI', 75]
  # npyramid_add - number of pyramid size levels to add
  npyramid_add: 3
  # pyramid_downsample - factor each pyramid level is down-sampled
  pyramid_downsample: 2
  # thumbnail_size - can be a factor between 0 and 1 or maximum pixel size (single value)
  thumbnail_size: 1000
  # label reader output
  csv: resources/csv/labels.csv
  # extra metadata (e.g. used for combine operation)
  #extra_metadata: {'channels': [{'label':label1, 'color':[1, 1, 1, 1]}, {'label':label2, 'color':[0, 1, 0, 1]}]}

# actions can be: info, thumbnail, convert, combine
actions: [convert]

# Omero credentials
credentials:
  # keys for encoding/decoding (in private space) note home (~) does not work inside container:
  private_key: ~/omero.pri.key
  public_key: ~/omero.pub.key
  # encoded credentials (in public space):
  credentials: .omero_credentials

# logging parameters
log:
  filename: log/omeslicc.log
  log_format: '%(asctime)s %(levelname)s: %(message)s'
