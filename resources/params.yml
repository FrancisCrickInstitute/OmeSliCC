# input parameters - use either Source or Omero
input:
  # source - input folder or URL (pattern or list supported) - if used Omero will be ignored as input
  #source: /source/
  omero:
    # host - Omero server address
    host: ssl://omero.server
    # include - Omero project id(s) / dataset id(s) / image id(s) to include
    include:
      project: [0, 1]
      dataset: [0, 1]
      image: [0, 1]
    # exclude - Omero project id(s) / dataset id(s) / image id(s) to exclude
    exclude:
      project: [0, 1]
      dataset: [0, 1]
      image: [0, 1]
    # labels - required Omero metadata labels (optional)
    #labels: [label1,label2]
  # mag - source magnification (if not in metadata)
  #mag: 20

# output parameters
output:
  # mag - optional output magnification
  #mag: 20
  # folder - output folder
  folder: output/images
  # format - output image format
  format: ome.tiff
  # overwrite - overwrite existing files in output folder
  overwrite: True
  # combine_rgb - combine rgb channels
  combine_rgb: True
  # split_channel_files - optional split channels into separate files
  #split_channel_files: True
  # tile_size - size for optional tiling
  tile_size: [256, 256]
  # compression - optional compression format/level
  compression: ['JPEGXR_NDPI', 75]
  # npyramid_add - number of pyramid size levels to add
  npyramid_add: 3
  # pyramid_downsample - factor each pyramid level is down-sampled
  pyramid_downsample: 4.0
  # thumbnail_size - can be a factor between 0 and 1 or maximum pixel size (single value)
  thumbnail_size: 1000
  csv: resources/csv/labels.csv

# actions can be: info, thumbnail, convert, labels
actions: [convert, labels]

# Omero credentials
credentials:
  # keys for encoding/decoding (in private space) note home (~) does not work inside container:
  private_key: ~/omero.pri.key
  public_key: ~/omero.pub.key
  # encoded credentials (in public space):
  credentials: .omero_credentials

# logging parameters
log:
  filename: log/omeslicc.log
  log_format: '%(asctime)s %(levelname)s: %(message)s'
